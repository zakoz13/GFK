import pymysql
import sqlalchemy as sal
from sqlalchemy import create_engine
import pandas as pd
from datetime import datetime
from pandas.tseries.offsets import DateOffset

pd.set_option('display.max_rows', 500)
pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 1000)

engine = create_engine("mysql+pymysql://ml_user:U5VVYcxx@46.182.24.170:3306/gfk", pool_pre_ping=True)
conn = engine.connect()


def ltv():

    global result_debt, c, d, interval, client_search

    def add_quotes(q):
        return "'" + q + "'"

    mode = (input("Поиск по клиентам или по дате c/d "))
    interval = int(input("Введите количество дней мониторинга "))

    if mode == 'c':
        clients_df = pd.DataFrame(pd.read_sql_query("select distinctrow ca.client_id from credit_application ca where ca.client_id in (16119,	17337,	28181,	29766,	30726,	33720,	43976,	45448,	45470,	53029,	55883,	59524,	64213,	73521,	75095,	79224,	85917,	91741,	94477,	97511,	103587,	110158,	111269,	112710,	118481,	127529,	129163,	132106,	133713,	145777,	145880,	150407,	157833,	162249,	164790,	168682,	171360,	173750,	174203,	175618,	176143,	180021,	181633,	183864,	185007,	185934,	192547,	193302,	196452,	196871,	197307,	203073,	204660,	212282,	213809,	215130,	216258,	216345,	218042,	226065,	228050,	236400,	249582,	250593,	252516,	253636,	255707,	255711,	258346,	259057,	260093,	266345,	271175,	275208,	275832,	277072,	279359,	282332,	283790,	283982,	285240,	291226,	292418,	296712,	311968,	316655,	318907,	320600,	325652,	327004,	328408,	328588,	329366,	329653,	334524,	335639,	340761,	341488,	341985,	344565,	345849,	346011,	347886,	351852,	359153,	655875,	657480,	658152,	659341,	661454,	665749,	668369,	676191,	677854,	687461,	692976,	693874,	696828,	697166,	697438,	701230,	701583,	702934,	703729,	706336,	709432,	716127,	716342,	719221,	723641,	724019,	724540,	724579,	728936,	729941,	730981,	739089,	740310,	741302,	747591,	750170,	751124,	754268,	755091,	756046,	756694,	757763,	757922,	759157,	761145,	765018,	769347,	771623,	772250,	772614,	774339,	774435,	778113,	786994,	792790,	793801,	801022,	805136,	807208,	810129,	810262,	810980,	814207,	819134,	820130,	821513,	825268,	825527,	835445,	837909,	838843,	839809,	842025,	842202,	842832,	843118,	843747,	844867,	845267,	846813,	847394,	849313,	849442,	853873,	854978,	855962,	856657,	857324,	861713,	862410,	862525,	864316,	866334,	871052,	872544,	873294,	873435,	873521,	873947,	880514,	880967,	882146,	882634,	883917,	884300,	884472,	885266,	885637,	886219,	887924,	888870,	894183,	894315,	896698,	897684,	897883,	897885,	898243,	898250,	900169,	903363,	904643,	906029,	906091,	907510,	909685,	912689,	912792,	913580,	914601,	914792,	916696,	917979,	918205,	920937,	921752,	921941,	923551,	925001,	926347,	926894,	928821,	929725,	929750,	931245,	932418,	933211,	934145,	935136,	935233,	935888,	937372,	937393,	940098,	940179,	940283,	946711,	948426,	948592,	948716,	950211,	952744,	953684,	954958,	955489,	956929,	956944,	957664,	957739,	958694,	959246,	959438,	959782,	959981,	961434,	962354,	963674,	963923,	963982,	965807,	966875,	967162,	967403,	968945,	969277,	969440,	970173,	970259,	970391,	971960,	973261,	974000,	977607,	977775,	978967,	979775,	979875,	980381,	980391,	980543,	981034,	981273,	983848,	983976,	984637,	985399,	986940,	987735,	989864,	990613,	993662,	993735,	996008,	996780,	996838,	996991,	998585,	999827,	1000103,	1003413,	1003578,	1004075,	1005088,	1005608,	1006414,	1007220,	1007707,	1009099,	1009123,	1009320,	1010939,	1012340,	1012446,	1015135,	1015193,	1016703,	1017701,	1018347,	1018799,	1022074,	1023085,	1023629,	1025869,	1025954,	1026338,	1030154,	1030253,	1031057,	1032130,	1033022,	1033917,	1034964,	1036791,	1037155,	1039990,	1041141,	1042891,	1043248,	1044038,	1045168,	1045185,	1045681,	1046337,	1049391,	1049816,	1050047,	1051053,	1052819,	1056451,	1056740,	1057491,	1059034,	1059310,	1060162,	1060354,	1060388,	1062196,	1062259,	1062262,	1062590,	1063612,	1063770,	1065010,	1066015,	1066139,	1066857,	1067064,	1069015,	1069043,	1069877,	1069967,	1070365,	1071295,	1072027,	1072412,	1074035,	1075063,	1075925,	1076335,	1078717,	1079203,	1079657,	1079806,	1079960,	1080436,	1080452,	1081173,	1082169,	1083204,	1083411,	1083652,	1084914,	1086112,	1087996,	1089157,	1091021,	1092043,	1095976,	1096782,	1098200,	1098935,	1099707,	1100308,	1100546,	1100653,	1101020,	1101710,	1104360,	1104523,	1104784,	1105880,	1106376,	1106655,	1107960,	1108147,	1108798,	1109079,	1110332,	1110398,	1110519,	1111908,	1113894,	1114233,	1114542,	1114882,	1115679,	1116040,	1116263,	1117973,	1118109,	1118145,	1119031,	1120172,	1120604,	1122124,	1122525,	1123930,	1124311,	1124440,	1124555,	1124954,	1126968,	1127152,	1127202,	1127434,	1127643,	1128834,	1129206,	1130158,	1130842,	1130899,	1131597,	1131652,	1133092,	1133630,	1134424,	1134940,	1134991,	1135678,	1135868,	1136220,	1137427,	1138171,	1138653,	1139261,	1140158,	1141049,	1141456,	1141556,	1143286,	1144799,	1145611,	1145722,	1146503,	1146791,	1147489,	1148322,	1149133,	1149214,	1150325,	1150396,	1150805,	1150955,	1152730,	1153598,	1154352,	1155479,	1156031,	1156376,	1157357,	1157431,	1157474,	1157633,	1157966,	1158224,	1158261,	1158400,	1158623,	1158625,	1159626,	1160227,	1160460,	1161045,	1161508,	1161924,	1162029,	1162335,	1162557,	1163701,	1164627,	1166288,	1166525,	1168419,	1168642,	1168815,	1169196,	1169441,	1170596,	1171443,	1171602,	1171784,	1172379,	1172435,	1173157,	1173196,	1173823,	1174156,	1174825,	1175666,	1175776,	1176139,	1176477,	1176814,	1177938,	1177974,	1178625,	1178924,	1179840,	1180131,	1181183,	1182165,	1182317,	1182516,	1182951,	1183868,	1184402,	1185201,	1185554,	1185933,	1187289,	1188979,	1189122,	1189923,	1190090,	1190402,	1192784,	1193083,	1193287,	1193345,	1193520,	1193932,	1194742,	1194942,	1195231,	1195711,	1195853,	1196122,	1196270,	1196558,	1196646,	1196662,	1196908,	1197161,	1197165,	1197173,	1197306,	1197630,	1198369,	1198462,	1198525,	1198562,	1198708,	1199290,	1199359,	1199422,	1199510,	1199560,	1199621,	1199647,	1199950,	1199965,	1200016,	1200136,	1200152,	1200401,	1200423,	1200566,	1200597,	1200708,	1200761,	1200832,	1200872,	1200925,	1201025,	1201049,	1201080,	1201168,	1201201,	1201433,	1201547,	1201585,	1201781,	1201807,	1201809,	1201828,	1201950,	1201973,	1201995,	1202153,	1202191,	1202337,	1202382,	1202407,	1202623,	1202628,	1202692,	1202785,	1202837,	1202842,	1202967,	1203006,	1203154,	1203195,	1203323,	1203337,	1203360,	1203452,	1203608,	1203618,	1203622,	1203665,	1203698,	1204093,	1204319,	1204691,	1204781,	1204917,	1205136,	1205140,	1205223,	1205236,	1205295,	1205367,	1205513,	1205545,	1205590,	1205645,	1205666,	1205690,	1205697,	1205737,	1205744,	1205753,	1205891,	1206265,	1206277,	1206442,	1206526,	1206530,	1206535,	1206604,	1206841,	1206913,	1206932,	1207039,	1207490,	1207560,	1207587,	1207781,	1207808,	1207979,	1207997,	1208012,	1208101,	1208204,	1208351,	1208547,	1208570,	1208657,	1208671,	1208805,	1208834,	1208862,	1208995,	1209037,	1209058,	1209107,	1209148,	1209199,	1209367,	1209400,	1209471,	1209631,	1209655,	1209782,	1209896,	1210082,	1210166,	1210315,	1210317,	1210334,	1210337,	1210364,	1210387,	1210410,	1210458,	1210460,	1210505,	1210593,	1210626,	1210700,	1210798,	1211259,	1211479,	1211543,	1211662,	1211683,	1211875,	1211876,	1211898,	1211911,	1211932,	1212048,	1212309,	1212350,	1212416,	1212709,	1212750,	1212917,	1212934,	1213003,	1213142,	1213194,	1213211,	1213507,	1213706,	1213753,	1213758,	1213816,	1213958,	1214030,	1214062,	1214154,	1214168,	1214185,	1214327,	1214442,	1214632,	1214658,	1214793,	1214849,	1214976,	1215179,	1215275,	1215565,	1215619,	1215749,	1215830,	1215947,	1216288,	1216300,	1216305,	1216343,	1216369,	1216424,	1216622,	1216836,	1216967,	1216989,	1217092,	1217194,	1217224,	1217339,	1217360,	1217373,	1217443,	1217542,	1217791,	1217799,	1217895,	1217966,	1218026,	1218114,	1218166,	1218258,	1218353,	1218395,	1218816,	1219721,	1219777,	1219879,	1220319,	1220614,	1220661,	1220864,	1221043,	1221062,	1221070,	1221260,	1221373,	1221517,	1221604,	1222144,	1222168,	1222263,	1222298,	1222494,	1222544,	1222619,	1222670,	1222816,	1222976,	1223122,	1223150,	1223394,	1223403,	1223538,	1223587,	1223628,	1223660,	1223703,	1223761,	1223790,	1223867,	1223901,	1223923,	1223935,	1223966,	1224023,	1224067,	1224081,	1224112,	1224204,	1224604,	1224667,	1224837,	1224903,	1224978,	1225166,	1225220,	1225271,	1225716,	1225756,	1225767,	1226130,	1226211,	1226279,	1226352,	1226385,	1226400,	1226405,	1226458,	1226476,	1226487,	1226600,	1226647,	1226740,	1226862,	1227117,	1227211,	1227247,	1227434,	1227558,	1227584,	1227599,	1227724,	1227740,	1227906,	1228059,	1228065,	1228089,	1228352,	1228746,	1228884,	1229156,	1229589,	1229612,	1229859,	1230053,	1230062,	1230102,	1230111,	1230113,	1230139,	1230359,	1230366,	1230464,	1230594,	1230831,	1230982,	1231165,	1231216,	1231349,	1231382,	1231404,	1231472,	1231715,	1231953,	1232013,	1232017,	1232115,	1232357,	1232516,	1232845,	1232850,	1232932,	1233140,	1233149,	1233254,	1233330,	1233512,	1234169,	1234385,	1234398,	1234563,	1234570,	1234585,	1234671,	1234849,	1234853,	1234949,	1235000,	1235074,	1235077,	1235114,	1235154,	1235215,	1235283,	1235388,	1235409,	1235487,	1235590,	1235745,	1235759,	1235762,	1235775,	1235968,	1236241,	1236244,	1236708,	1236981,	1237246,	1237324,	1237431,	1237480,	1237576,	1237887,	1237905,	1238171,	1238349,	1238517,	1238521,	1238594,	1238602,	1238924,	1238996,	1239077,	1239254,	1239267,	1239730,	1239878,	1239940,	1240138,	1240228,	1240265,	1240349,	1240971,	1241162,	1241256,	1241269,	1241292,	1241333,	1241610,	1241749,	1242296,	1242375,	1242594,	1242656,	1242966,	1243381,	1243545,	1243937,	1244074,	1244216,	1244284,	1244418,	1244603,	1245013,	1245023,	1245225,	1245312,	1245381,	1245555,	1245627,	1245652,	1245794,	1246114,	1246145,	1246231,	1246281,	1246404,	1246923,	1247056,	1247468,	1247497,	1247553,	1247637,	1247891,	1248050,	1248142,	1248148,	1248313,	1248467,	1248491,	1248502,	1248533,	1248578,	1248786,	1248945,	1249033,	1249044,	1249167,	1249215,	1249548,	1249566,	1249633,	1249663,	1249821,	1249933,	1249934,	1250026,	1250226,	1250388,	1250541,	1250632,	1250650,	1250805,	1251194,	1251209,	1251271,	1251291,	1251664,	1251799,	1251841,	1251900,	1251942,	1251999,	1252096,	1252186,	1252306,	1252355,	1252392,	1252443,	1252494,	1252582,	1252677,	1252681,	1252747,	1253180,	1253192,	1253246,	1253302,	1253658,	1253688,	1253690,	1253855,	1253989,	1254080,	1254153,	1254406,	1255207,	1255218,	1255295,	1255393,	1255442,	1255940,	1256024,	1256074,	1256260,	1256793,	1257231,	1257359,	1257379,	1257753,	1257945,	1258086,	1258329,	1258331,	1258335,	1258610,	1258958,	1259056,	1259260,	1259404,	1259730,	1259943,	1259958,	1260043,	1260125,	1260144,	1260179,	1260452,	1260459,	1260493,	1260515,	1260714,	1260869,	1260889,	1260988,	1261243,	1261282,	1261324,	1261345,	1261353,	1261432,	1261444,	1262071,	1262411,	1262531,	1262734,	1262760,	1262842,	1263007,	1263037,	1263091,	1263460,	1263522,	1263548,	1263615,	1263738,	1263828,	1264025,	1264107,	1264179,	1264506,	1265010,	1265055,	1265113,	1265213,	1265235,	1265568,	1265647,	1265816,	1265856,	1266447,	1267021,	1267035,	1267131,	1267721,	1267834,	1267944,	1268252,	1268255,	1268450,	1268570,	1269297,	1269414,	1269418,	1269420,	1269857,	1269915,	1269966,	1269976,	1270076,	1270236,	1270252,	1270330,	1270390,	1270408,	1270449,	1270518,	1270615,	1270853,	1271211,	1271391,	1271572,	1271806,	1272236,	1272683,	1272726,	1272843,	1273030,	1273497,	1273873,	1274047,	1274423,	1274445,	1274577,	1276341,	1276817,	1277123,	1277227,	1277311,	1277413,	1277483,	1277539,	1278029,	1278141,	1278614,	1278870,	1278909,	1278933,	1279187,	1279243,	1279247,	1279275,	1279870,	1279978,	1280019,	1280166,	1280710,	1281012,	1281170,	1281343,	1281468,	1281718,	1282664,	1282973,	1283476,	1283551,	1283582,	1283890,	1284034,	1284505,	1285381,	1285451,	1286108,	1286247,	1287877,	1288077,	1288186,	1288346,	1289109,	1289516,	1289714,	1289969,	1290141,	1290236,	1290575,	1290581,	1290610,	1290665,	1290703,	1290873,	1290986,	1291262,	1291432,	1291489,	1291941,	1293010,	1293328,	1293693,	1294978,	1295532,	1295713,	1295891,	1296003,	1296627,	1296727,	1297163,	1297486,	1297561,	1297634,	1297646,	1297905,	1298297,	1298889,	1299234,	1299447,	1299611,	1299745,	1299798,	1299999,	1300350,	1300413,	1301453,	1301751,	1302058,	1302086,	1302193,	1302703,	1302931,	1302956,	1303210,	1303307,	1303494,	1303947,	1304482,	1304770,	1304823,	1304933,	1304967,	1304981,	1305116,	1305219,	1305431,	1305717,	1305932,	1305937,	1306111,	1306307,	1306469,	1306865,	1307080,	1307223,	1307230,	1307730,	1307753,	1308052,	1309016,	1309335,	1309373,	1309485,	1309509,	1309765,	1309898,	1310228,	1310361,	1310666,	1310903,	1311043,	1311725,	1312679,	1313208,	1313826,	1313841,	1313895,	1314527,	1315053,	1315294,	1315903,	1316174,	1316287,	1316787,	1317346,	1317888,	1318321,	1318880,	1319130,	1319243,	1319423,	1320012,	1320084,	1320440,	1320552,	1320919,	1321157,	1322026,	1322327,	1322576,	1322622,	1322992,	1323495,	1323577,	1323653,	1323837,	1324047,	1324103,	1324243,	1325060,	1325603,	1325925,	1326060,	1326232,	1326245,	1326501,	1326998,	1330609,	1331710,	1331717,	1332423,	1332504,	1332595,	1332739,	1333114,	1333873,	1333895,	1334365,	1334572,	1335093,	1336439,	1336825,	1336970,	1337110,	1337580,	1338197,	1338413,	1338889,	1339308,	1341160,	1341299,	1341615,	1342420,	1343442,	1343741,	1344439,	1344472,	1344538,	1344539,	1344669,	1344731,	1344921,	1345110,	1345398,	1345531,	1345617,	1345768,	1345918,	1346756,	1347030,	1347865,	1349267,	1349842,	1350570,	1350809,	1350858,	1353198,	1353314,	1354177,	1355003,	1355708,	1358115,	1358185,	1359199,	1359874,	1360316,	1360390,	1360584,	1361415,	1361770,	1362271,	1362352,	1364213,	1368176,	1368191,	1368688,	1368965,	1370124,	1370482,	1371009,	1371661,	1371903,	1372404,	1373248,	1374602,	1374791,	1375494,	1375624,	1375649,	1375972,	1376231,	1376236,	1376337,	1376762,	1376840,	1377209,	1378625,	1379979,	1380614,	1380690,	1380832,	1380858,	1380968,	1381094,	1381379,	1382353,	1382648,	1383435,	1383611,	1384030,	1384326,	1385400,	1386178,	1386641,	1387114,	1387402,	1388418,	1388450,	1388644,	1389195,	1389636,	1390342,	1391039,	1391219,	1391895,	1391956,	1392146,	1393848,	1393855,	1394562,	1395626,	1396432,	1397186,	1397188,	1397788,	1397826,	1397979,	1398256,	1400224,	1403288,	1405658,	1407939,	1411004,	1412226,	1422445,	1425229,	1433721,	1434675,	1439128,	1441590,	1441719,	1454762);", conn))
        mode = clients_df
    elif mode == 'd':
        date_1 = input("Введите дату начала мониторинга в формате YYYY-MM-DD: ")
        date_2 = input("Введите дату окончания мониторинга  в формате YYYY-MM-DD: ")
        date_df = pd.DataFrame(pd.read_sql_query("select distinctrow ca.client_id from credit_application ca where date(creation_date) between " + add_quotes(date_1) + " and " + add_quotes(date_2) + " and ca.loan_id is not null and ca.cnt_closed_loans = 0;", conn))
        mode = date_df

    search_clients = []
    for client_id in mode.client_id:
        try:
            client_search = pd.DataFrame(pd.read_sql_query("select ca.client_id, date(ca.creation_date) as date, ifnull(((select distinctrow (select lrs.remaining_body from loan_retro_stat lrs where lrs.loan_id = ca3.loan_id and date(lrs.date) = (DATE_ADD(date(ca3.creation_date), INTERVAL " + str(interval) + " DAY ))) from credit_application ca3 where date(ca3.creation_date) = (select distinctrow date(ca.creation_date) from credit_application ca where ca3.client_id = ca.client_id and ca.cnt_closed_loans = 0 and ca.loan_id is not null) and ca3.client_id = ca.client_id group by ca3.client_id)), 0) as debt_" + str(interval) + ", ifnull(sum((select sum(sum) from incoming_transfer it where l.id = it.loan_id and it.destination != 'body' and ca.cnt_closed_loans = 0 and it.type not in ('write-off-reserves', 'cession', 'refund') and (it.creation_date) between date(ca.creation_date) and (DATE_ADD(date(ca.creation_date), INTERVAL " + str(interval) + " DAY)))), 0) as sum_" + str(interval) + " from credit_application ca join loan l on ca.client_id = l.client_id where ca.client_id = " + str(client_id) + " and ca.loan_id is not null and ca.cnt_closed_loans = 0 group by ca.client_id order by date(ca.creation_date);", conn))
            search_clients.append(client_search)
        except sal.exc.DBAPIError:
            client_search.debt = 0

        result_debt = pd.concat(search_clients, ignore_index=True)
        cols_deb = result_debt.columns.tolist()
        result_debt = result_debt[cols_deb]

    final = result_debt
    final["PNL"] = final["sum_" + str(interval) + ""] - final["debt_" + str(interval) + ""]

    final["category"] = 0
    final.loc[final["PNL"] >= 30000, "category"] = "30+"
    final.loc[(final["PNL"] >= 20000) & (final["PNL"] <= 29999), "category"] = "20-29.9"
    final.loc[(final["PNL"] >= 10000) & (final["PNL"] <= 19999), "category"] = "10-19.9"
    final.loc[(final["PNL"] >= 6000) & (final["PNL"] <= 9999), "category"] = "6-9.9"
    final.loc[(final["PNL"] >= 3000) & (final["PNL"] <= 5999), "category"] = "3-5.9"
    final.loc[(final["PNL"] >= 0) & (final["PNL"] <= 2999), "category"] = "0-2.9"
    final.loc[final["PNL"] < 0, "category"] = "<0"

    # print(final)
    final.to_excel("LTV" + str(interval) + ".xlsx", sheet_name="ltv")
    # final.to_csv("LTV + ".csv")


ltv()
